import numpy as np 
import pandas as pd 
from scipy import sparse 


jac_df=pd.DataFrame([15 *[None]],columns=['rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis'],index=['jcl_lca_rev', 'jcl_lca_upright', 'jcl_strut_ch', 'jcl_strut_cyl', 'jcl_strut_lca', 'jcl_tie_steering', 'jcl_tie_upright', 'jcl_uca_rev', 'jcl_uca_upright', 'jcr_lca_rev', 'jcr_lca_upright', 'jcr_strut_ch', 'jcr_strut_cyl', 'jcr_strut_lca', 'jcr_tie_steering', 'jcr_tie_upright', 'jcr_uca_rev', 'jcr_uca_upright', 'rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis', 'mcl_wheel_travel', 'mcr_wheel_travel'])
def cq(q,bodies,joints,actuators): 
	 jac_df.loc['jcl_lca_rev','rbl_lca']=joints['jcl_lca_rev'].jacobian_i(q)
	 jac_df.loc['jcl_lca_rev','rbs_chassis']=joints['jcl_lca_rev'].jacobian_j(q)
	 jac_df.loc['jcl_lca_upright','rbl_lca']=joints['jcl_lca_upright'].jacobian_i(q)
	 jac_df.loc['jcl_lca_upright','rbl_upright']=joints['jcl_lca_upright'].jacobian_j(q)
	 jac_df.loc['jcl_strut_ch','rbl_strut_upper']=joints['jcl_strut_ch'].jacobian_i(q)
	 jac_df.loc['jcl_strut_ch','rbs_chassis']=joints['jcl_strut_ch'].jacobian_j(q)
	 jac_df.loc['jcl_strut_cyl','rbl_strut_upper']=joints['jcl_strut_cyl'].jacobian_i(q)
	 jac_df.loc['jcl_strut_cyl','rbl_strut_lower']=joints['jcl_strut_cyl'].jacobian_j(q)
	 jac_df.loc['jcl_strut_lca','rbl_strut_lower']=joints['jcl_strut_lca'].jacobian_i(q)
	 jac_df.loc['jcl_strut_lca','rbl_lca']=joints['jcl_strut_lca'].jacobian_j(q)
	 jac_df.loc['jcl_tie_steering','rbl_tie_rod']=joints['jcl_tie_steering'].jacobian_i(q)
	 jac_df.loc['jcl_tie_steering','rbl_steering_rocker']=joints['jcl_tie_steering'].jacobian_j(q)
	 jac_df.loc['jcl_tie_upright','rbl_tie_rod']=joints['jcl_tie_upright'].jacobian_i(q)
	 jac_df.loc['jcl_tie_upright','rbl_upright']=joints['jcl_tie_upright'].jacobian_j(q)
	 jac_df.loc['jcl_uca_rev','rbl_uca']=joints['jcl_uca_rev'].jacobian_i(q)
	 jac_df.loc['jcl_uca_rev','rbs_chassis']=joints['jcl_uca_rev'].jacobian_j(q)
	 jac_df.loc['jcl_uca_upright','rbl_uca']=joints['jcl_uca_upright'].jacobian_i(q)
	 jac_df.loc['jcl_uca_upright','rbl_upright']=joints['jcl_uca_upright'].jacobian_j(q)
	 jac_df.loc['jcr_lca_rev','rbr_lca']=joints['jcr_lca_rev'].jacobian_i(q)
	 jac_df.loc['jcr_lca_rev','rbs_chassis']=joints['jcr_lca_rev'].jacobian_j(q)
	 jac_df.loc['jcr_lca_upright','rbr_lca']=joints['jcr_lca_upright'].jacobian_i(q)
	 jac_df.loc['jcr_lca_upright','rbr_upright']=joints['jcr_lca_upright'].jacobian_j(q)
	 jac_df.loc['jcr_strut_ch','rbr_strut_upper']=joints['jcr_strut_ch'].jacobian_i(q)
	 jac_df.loc['jcr_strut_ch','rbs_chassis']=joints['jcr_strut_ch'].jacobian_j(q)
	 jac_df.loc['jcr_strut_cyl','rbr_strut_upper']=joints['jcr_strut_cyl'].jacobian_i(q)
	 jac_df.loc['jcr_strut_cyl','rbr_strut_lower']=joints['jcr_strut_cyl'].jacobian_j(q)
	 jac_df.loc['jcr_strut_lca','rbr_strut_lower']=joints['jcr_strut_lca'].jacobian_i(q)
	 jac_df.loc['jcr_strut_lca','rbr_lca']=joints['jcr_strut_lca'].jacobian_j(q)
	 jac_df.loc['jcr_tie_steering','rbr_tie_rod']=joints['jcr_tie_steering'].jacobian_i(q)
	 jac_df.loc['jcr_tie_steering','rbr_steering_rocker']=joints['jcr_tie_steering'].jacobian_j(q)
	 jac_df.loc['jcr_tie_upright','rbr_tie_rod']=joints['jcr_tie_upright'].jacobian_i(q)
	 jac_df.loc['jcr_tie_upright','rbr_upright']=joints['jcr_tie_upright'].jacobian_j(q)
	 jac_df.loc['jcr_uca_rev','rbr_uca']=joints['jcr_uca_rev'].jacobian_i(q)
	 jac_df.loc['jcr_uca_rev','rbs_chassis']=joints['jcr_uca_rev'].jacobian_j(q)
	 jac_df.loc['jcr_uca_upright','rbr_uca']=joints['jcr_uca_upright'].jacobian_i(q)
	 jac_df.loc['jcr_uca_upright','rbr_upright']=joints['jcr_uca_upright'].jacobian_j(q)
	 jac_df.loc['rbl_lca','rbl_lca']=bodies['rbl_lca'].unity_jacobian(q)
	 jac_df.loc['rbl_steering_rocker','rbl_steering_rocker']=bodies['rbl_steering_rocker'].mount_jacobian(q)
	 jac_df.loc['rbl_strut_lower','rbl_strut_lower']=bodies['rbl_strut_lower'].unity_jacobian(q)
	 jac_df.loc['rbl_strut_upper','rbl_strut_upper']=bodies['rbl_strut_upper'].unity_jacobian(q)
	 jac_df.loc['rbl_tie_rod','rbl_tie_rod']=bodies['rbl_tie_rod'].unity_jacobian(q)
	 jac_df.loc['rbl_uca','rbl_uca']=bodies['rbl_uca'].unity_jacobian(q)
	 jac_df.loc['rbl_upright','rbl_upright']=bodies['rbl_upright'].unity_jacobian(q)
	 jac_df.loc['rbr_lca','rbr_lca']=bodies['rbr_lca'].unity_jacobian(q)
	 jac_df.loc['rbr_steering_rocker','rbr_steering_rocker']=bodies['rbr_steering_rocker'].mount_jacobian(q)
	 jac_df.loc['rbr_strut_lower','rbr_strut_lower']=bodies['rbr_strut_lower'].unity_jacobian(q)
	 jac_df.loc['rbr_strut_upper','rbr_strut_upper']=bodies['rbr_strut_upper'].unity_jacobian(q)
	 jac_df.loc['rbr_tie_rod','rbr_tie_rod']=bodies['rbr_tie_rod'].unity_jacobian(q)
	 jac_df.loc['rbr_uca','rbr_uca']=bodies['rbr_uca'].unity_jacobian(q)
	 jac_df.loc['rbr_upright','rbr_upright']=bodies['rbr_upright'].unity_jacobian(q)
	 jac_df.loc['rbs_chassis','rbs_chassis']=bodies['rbs_chassis'].mount_jacobian(q)
	 jac_df.loc['mcl_wheel_travel','rbl_upright']=actuators['mcl_wheel_travel'].jacobian()
	 jac_df.loc['mcr_wheel_travel','rbr_upright']=actuators['mcr_wheel_travel'].jacobian()
	 jac=sparse.bmat(jac_df,format='csc') 
	 return jac 


eq_s=pd.Series([35 *[None]],index=['jcl_lca_rev', 'jcl_lca_upright', 'jcl_strut_ch', 'jcl_strut_cyl', 'jcl_strut_lca', 'jcl_tie_steering', 'jcl_tie_upright', 'jcl_uca_rev', 'jcl_uca_upright', 'jcr_lca_rev', 'jcr_lca_upright', 'jcr_strut_ch', 'jcr_strut_cyl', 'jcr_strut_lca', 'jcr_tie_steering', 'jcr_tie_upright', 'jcr_uca_rev', 'jcr_uca_upright', 'rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis', 'mcl_wheel_travel', 'mcr_wheel_travel'])
def eq(q,bodies,joints,actuators): 
	 eq_s['jcl_lca_rev']=joints['jcl_lca_rev'].equations(q)
	 eq_s['jcl_lca_upright']=joints['jcl_lca_upright'].equations(q)
	 eq_s['jcl_strut_ch']=joints['jcl_strut_ch'].equations(q)
	 eq_s['jcl_strut_cyl']=joints['jcl_strut_cyl'].equations(q)
	 eq_s['jcl_strut_lca']=joints['jcl_strut_lca'].equations(q)
	 eq_s['jcl_tie_steering']=joints['jcl_tie_steering'].equations(q)
	 eq_s['jcl_tie_upright']=joints['jcl_tie_upright'].equations(q)
	 eq_s['jcl_uca_rev']=joints['jcl_uca_rev'].equations(q)
	 eq_s['jcl_uca_upright']=joints['jcl_uca_upright'].equations(q)
	 eq_s['jcr_lca_rev']=joints['jcr_lca_rev'].equations(q)
	 eq_s['jcr_lca_upright']=joints['jcr_lca_upright'].equations(q)
	 eq_s['jcr_strut_ch']=joints['jcr_strut_ch'].equations(q)
	 eq_s['jcr_strut_cyl']=joints['jcr_strut_cyl'].equations(q)
	 eq_s['jcr_strut_lca']=joints['jcr_strut_lca'].equations(q)
	 eq_s['jcr_tie_steering']=joints['jcr_tie_steering'].equations(q)
	 eq_s['jcr_tie_upright']=joints['jcr_tie_upright'].equations(q)
	 eq_s['jcr_uca_rev']=joints['jcr_uca_rev'].equations(q)
	 eq_s['jcr_uca_upright']=joints['jcr_uca_upright'].equations(q)
	 eq_s['rbl_lca']=bodies['rbl_lca'].unity_equation(q)
	 eq_s['rbl_steering_rocker']=bodies['rbl_steering_rocker'].mount_equation(q)
	 eq_s['rbl_strut_lower']=bodies['rbl_strut_lower'].unity_equation(q)
	 eq_s['rbl_strut_upper']=bodies['rbl_strut_upper'].unity_equation(q)
	 eq_s['rbl_tie_rod']=bodies['rbl_tie_rod'].unity_equation(q)
	 eq_s['rbl_uca']=bodies['rbl_uca'].unity_equation(q)
	 eq_s['rbl_upright']=bodies['rbl_upright'].unity_equation(q)
	 eq_s['rbr_lca']=bodies['rbr_lca'].unity_equation(q)
	 eq_s['rbr_steering_rocker']=bodies['rbr_steering_rocker'].mount_equation(q)
	 eq_s['rbr_strut_lower']=bodies['rbr_strut_lower'].unity_equation(q)
	 eq_s['rbr_strut_upper']=bodies['rbr_strut_upper'].unity_equation(q)
	 eq_s['rbr_tie_rod']=bodies['rbr_tie_rod'].unity_equation(q)
	 eq_s['rbr_uca']=bodies['rbr_uca'].unity_equation(q)
	 eq_s['rbr_upright']=bodies['rbr_upright'].unity_equation(q)
	 eq_s['rbs_chassis']=bodies['rbs_chassis'].mount_equation(q)
	 eq_s['mcl_wheel_travel']=actuators['mcl_wheel_travel'].equations(q)
	 eq_s['mcr_wheel_travel']=actuators['mcr_wheel_travel'].equations(q)
	 system=sparse.bmat(eq_s.values.reshape((35,1)),format='csc') 
	 return system.A.reshape((105,)) 


vel_rhs_s=pd.Series([35 *[None]],index=['jcl_lca_rev', 'jcl_lca_upright', 'jcl_strut_ch', 'jcl_strut_cyl', 'jcl_strut_lca', 'jcl_tie_steering', 'jcl_tie_upright', 'jcl_uca_rev', 'jcl_uca_upright', 'jcr_lca_rev', 'jcr_lca_upright', 'jcr_strut_ch', 'jcr_strut_cyl', 'jcr_strut_lca', 'jcr_tie_steering', 'jcr_tie_upright', 'jcr_uca_rev', 'jcr_uca_upright', 'rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis', 'mcl_wheel_travel', 'mcr_wheel_travel'])
def vel_rhs(actuators): 
	 vrhs=np.zeros((103,1))
	 vrhs=np.concatenate([vrhs,actuators['mcl_wheel_travel'].vel_rhs()]) 
	 vrhs=np.concatenate([vrhs,actuators['mcr_wheel_travel'].vel_rhs()]) 
	 return vrhs 
acc_rhs_s=pd.Series([35 *[None]],index=['jcl_lca_rev', 'jcl_lca_upright', 'jcl_strut_ch', 'jcl_strut_cyl', 'jcl_strut_lca', 'jcl_tie_steering', 'jcl_tie_upright', 'jcl_uca_rev', 'jcl_uca_upright', 'jcr_lca_rev', 'jcr_lca_upright', 'jcr_strut_ch', 'jcr_strut_cyl', 'jcr_strut_lca', 'jcr_tie_steering', 'jcr_tie_upright', 'jcr_uca_rev', 'jcr_uca_upright', 'rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis', 'mcl_wheel_travel', 'mcr_wheel_travel'])
def acc_rhs(q,qdot,bodies,joints,actuators): 
	 acc_rhs_s['jcl_lca_rev']=joints['jcl_lca_rev'].acc_rhs(q,qdot)
	 acc_rhs_s['jcl_lca_upright']=joints['jcl_lca_upright'].acc_rhs(q,qdot)
	 acc_rhs_s['jcl_strut_ch']=joints['jcl_strut_ch'].acc_rhs(q,qdot)
	 acc_rhs_s['jcl_strut_cyl']=joints['jcl_strut_cyl'].acc_rhs(q,qdot)
	 acc_rhs_s['jcl_strut_lca']=joints['jcl_strut_lca'].acc_rhs(q,qdot)
	 acc_rhs_s['jcl_tie_steering']=joints['jcl_tie_steering'].acc_rhs(q,qdot)
	 acc_rhs_s['jcl_tie_upright']=joints['jcl_tie_upright'].acc_rhs(q,qdot)
	 acc_rhs_s['jcl_uca_rev']=joints['jcl_uca_rev'].acc_rhs(q,qdot)
	 acc_rhs_s['jcl_uca_upright']=joints['jcl_uca_upright'].acc_rhs(q,qdot)
	 acc_rhs_s['jcr_lca_rev']=joints['jcr_lca_rev'].acc_rhs(q,qdot)
	 acc_rhs_s['jcr_lca_upright']=joints['jcr_lca_upright'].acc_rhs(q,qdot)
	 acc_rhs_s['jcr_strut_ch']=joints['jcr_strut_ch'].acc_rhs(q,qdot)
	 acc_rhs_s['jcr_strut_cyl']=joints['jcr_strut_cyl'].acc_rhs(q,qdot)
	 acc_rhs_s['jcr_strut_lca']=joints['jcr_strut_lca'].acc_rhs(q,qdot)
	 acc_rhs_s['jcr_tie_steering']=joints['jcr_tie_steering'].acc_rhs(q,qdot)
	 acc_rhs_s['jcr_tie_upright']=joints['jcr_tie_upright'].acc_rhs(q,qdot)
	 acc_rhs_s['jcr_uca_rev']=joints['jcr_uca_rev'].acc_rhs(q,qdot)
	 acc_rhs_s['jcr_uca_upright']=joints['jcr_uca_upright'].acc_rhs(q,qdot)
	 acc_rhs_s['rbl_lca']=bodies['rbl_lca'].acc_rhs(qdot)
	 acc_rhs_s['rbl_steering_rocker']=bodies['rbl_steering_rocker'].mount_acc_rhs(qdot)
	 acc_rhs_s['rbl_strut_lower']=bodies['rbl_strut_lower'].acc_rhs(qdot)
	 acc_rhs_s['rbl_strut_upper']=bodies['rbl_strut_upper'].acc_rhs(qdot)
	 acc_rhs_s['rbl_tie_rod']=bodies['rbl_tie_rod'].acc_rhs(qdot)
	 acc_rhs_s['rbl_uca']=bodies['rbl_uca'].acc_rhs(qdot)
	 acc_rhs_s['rbl_upright']=bodies['rbl_upright'].acc_rhs(qdot)
	 acc_rhs_s['rbr_lca']=bodies['rbr_lca'].acc_rhs(qdot)
	 acc_rhs_s['rbr_steering_rocker']=bodies['rbr_steering_rocker'].mount_acc_rhs(qdot)
	 acc_rhs_s['rbr_strut_lower']=bodies['rbr_strut_lower'].acc_rhs(qdot)
	 acc_rhs_s['rbr_strut_upper']=bodies['rbr_strut_upper'].acc_rhs(qdot)
	 acc_rhs_s['rbr_tie_rod']=bodies['rbr_tie_rod'].acc_rhs(qdot)
	 acc_rhs_s['rbr_uca']=bodies['rbr_uca'].acc_rhs(qdot)
	 acc_rhs_s['rbr_upright']=bodies['rbr_upright'].acc_rhs(qdot)
	 acc_rhs_s['rbs_chassis']=bodies['rbs_chassis'].mount_acc_rhs(qdot)
	 acc_rhs_s['mcl_wheel_travel']=actuators['mcl_wheel_travel'].acc_rhs(q,qdot)
	 acc_rhs_s['mcr_wheel_travel']=actuators['mcr_wheel_travel'].acc_rhs(q,qdot)
	 system=sparse.bmat(acc_rhs_s.values.reshape((35,1)),format='csc') 
	 return system.A.reshape((105,)) 


mass_matrix_df=pd.DataFrame([15 *[None]],columns=['rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis'],index=['rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis'])
def mass_matrix(q,bodies): 
	 mass_matrix_df.loc['rbl_lca','rbl_lca']=bodies['rbl_lca'].mass_matrix(q)
	 mass_matrix_df.loc['rbl_steering_rocker','rbl_steering_rocker']=bodies['rbl_steering_rocker'].mass_matrix(q)
	 mass_matrix_df.loc['rbl_strut_lower','rbl_strut_lower']=bodies['rbl_strut_lower'].mass_matrix(q)
	 mass_matrix_df.loc['rbl_strut_upper','rbl_strut_upper']=bodies['rbl_strut_upper'].mass_matrix(q)
	 mass_matrix_df.loc['rbl_tie_rod','rbl_tie_rod']=bodies['rbl_tie_rod'].mass_matrix(q)
	 mass_matrix_df.loc['rbl_uca','rbl_uca']=bodies['rbl_uca'].mass_matrix(q)
	 mass_matrix_df.loc['rbl_upright','rbl_upright']=bodies['rbl_upright'].mass_matrix(q)
	 mass_matrix_df.loc['rbr_lca','rbr_lca']=bodies['rbr_lca'].mass_matrix(q)
	 mass_matrix_df.loc['rbr_steering_rocker','rbr_steering_rocker']=bodies['rbr_steering_rocker'].mass_matrix(q)
	 mass_matrix_df.loc['rbr_strut_lower','rbr_strut_lower']=bodies['rbr_strut_lower'].mass_matrix(q)
	 mass_matrix_df.loc['rbr_strut_upper','rbr_strut_upper']=bodies['rbr_strut_upper'].mass_matrix(q)
	 mass_matrix_df.loc['rbr_tie_rod','rbr_tie_rod']=bodies['rbr_tie_rod'].mass_matrix(q)
	 mass_matrix_df.loc['rbr_uca','rbr_uca']=bodies['rbr_uca'].mass_matrix(q)
	 mass_matrix_df.loc['rbr_upright','rbr_upright']=bodies['rbr_upright'].mass_matrix(q)
	 mass_matrix_df.loc['rbs_chassis','rbs_chassis']=bodies['rbs_chassis'].mass_matrix(q)
	 mass_matrix=sparse.bmat(mass_matrix_df,format='csc') 
	 return mass_matrix 


Qg_s=pd.Series([15 *np.zeros((7,1))],index=['rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis'])
def Qg(bodies): 
	 Qg_s['rbl_lca']=bodies['rbl_lca'].gravity()
	 Qg_s['rbl_steering_rocker']=bodies['rbl_steering_rocker'].gravity()
	 Qg_s['rbl_strut_lower']=bodies['rbl_strut_lower'].gravity()
	 Qg_s['rbl_strut_upper']=bodies['rbl_strut_upper'].gravity()
	 Qg_s['rbl_tie_rod']=bodies['rbl_tie_rod'].gravity()
	 Qg_s['rbl_uca']=bodies['rbl_uca'].gravity()
	 Qg_s['rbl_upright']=bodies['rbl_upright'].gravity()
	 Qg_s['rbr_lca']=bodies['rbr_lca'].gravity()
	 Qg_s['rbr_steering_rocker']=bodies['rbr_steering_rocker'].gravity()
	 Qg_s['rbr_strut_lower']=bodies['rbr_strut_lower'].gravity()
	 Qg_s['rbr_strut_upper']=bodies['rbr_strut_upper'].gravity()
	 Qg_s['rbr_tie_rod']=bodies['rbr_tie_rod'].gravity()
	 Qg_s['rbr_uca']=bodies['rbr_uca'].gravity()
	 Qg_s['rbr_upright']=bodies['rbr_upright'].gravity()
	 Qg_s['rbs_chassis']=bodies['rbs_chassis'].gravity()
	 system=sparse.bmat(Qg_s.values.reshape((15,1)),format='csc') 
	 return system.A.reshape((105,)) 


Qv_s=pd.Series([15 *np.zeros((7,1))],index=['rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis'])
def Qv(bodies,q,qdot): 
	 Qv_s['rbl_lca']=bodies['rbl_lca'].centrifugal(q,qdot)
	 Qv_s['rbl_steering_rocker']=bodies['rbl_steering_rocker'].centrifugal(q,qdot)
	 Qv_s['rbl_strut_lower']=bodies['rbl_strut_lower'].centrifugal(q,qdot)
	 Qv_s['rbl_strut_upper']=bodies['rbl_strut_upper'].centrifugal(q,qdot)
	 Qv_s['rbl_tie_rod']=bodies['rbl_tie_rod'].centrifugal(q,qdot)
	 Qv_s['rbl_uca']=bodies['rbl_uca'].centrifugal(q,qdot)
	 Qv_s['rbl_upright']=bodies['rbl_upright'].centrifugal(q,qdot)
	 Qv_s['rbr_lca']=bodies['rbr_lca'].centrifugal(q,qdot)
	 Qv_s['rbr_steering_rocker']=bodies['rbr_steering_rocker'].centrifugal(q,qdot)
	 Qv_s['rbr_strut_lower']=bodies['rbr_strut_lower'].centrifugal(q,qdot)
	 Qv_s['rbr_strut_upper']=bodies['rbr_strut_upper'].centrifugal(q,qdot)
	 Qv_s['rbr_tie_rod']=bodies['rbr_tie_rod'].centrifugal(q,qdot)
	 Qv_s['rbr_uca']=bodies['rbr_uca'].centrifugal(q,qdot)
	 Qv_s['rbr_upright']=bodies['rbr_upright'].centrifugal(q,qdot)
	 Qv_s['rbs_chassis']=bodies['rbs_chassis'].centrifugal(q,qdot)
	 system=sparse.bmat(Qv_s.values.reshape((15,1)),format='csc') 
	 return system.A.reshape((105,)) 


Qa_s=pd.Series([15 *np.zeros((7,1))],index=['rbl_lca', 'rbl_steering_rocker', 'rbl_strut_lower', 'rbl_strut_upper', 'rbl_tie_rod', 'rbl_uca', 'rbl_upright', 'rbr_lca', 'rbr_steering_rocker', 'rbr_strut_lower', 'rbr_strut_upper', 'rbr_tie_rod', 'rbr_uca', 'rbr_upright', 'rbs_chassis'])
def Qa(forces,q,qdot): 
	 system=sparse.bmat(Qa_s.values.reshape((15,1)),format='csc') 
	 return system.A.reshape((105,)) 


JR_s=pd.Series(np.zeros((108)),index=['jcl_lca_rev_Fx', 'jcl_lca_rev_Fy', 'jcl_lca_rev_Fz', 'jcl_lca_rev_Mx', 'jcl_lca_rev_My', 'jcl_lca_rev_Mz', 'jcl_lca_upright_Fx', 'jcl_lca_upright_Fy', 'jcl_lca_upright_Fz', 'jcl_lca_upright_Mx', 'jcl_lca_upright_My', 'jcl_lca_upright_Mz', 'jcl_strut_ch_Fx', 'jcl_strut_ch_Fy', 'jcl_strut_ch_Fz', 'jcl_strut_ch_Mx', 'jcl_strut_ch_My', 'jcl_strut_ch_Mz', 'jcl_strut_cyl_Fx', 'jcl_strut_cyl_Fy', 'jcl_strut_cyl_Fz', 'jcl_strut_cyl_Mx', 'jcl_strut_cyl_My', 'jcl_strut_cyl_Mz', 'jcl_strut_lca_Fx', 'jcl_strut_lca_Fy', 'jcl_strut_lca_Fz', 'jcl_strut_lca_Mx', 'jcl_strut_lca_My', 'jcl_strut_lca_Mz', 'jcl_tie_steering_Fx', 'jcl_tie_steering_Fy', 'jcl_tie_steering_Fz', 'jcl_tie_steering_Mx', 'jcl_tie_steering_My', 'jcl_tie_steering_Mz', 'jcl_tie_upright_Fx', 'jcl_tie_upright_Fy', 'jcl_tie_upright_Fz', 'jcl_tie_upright_Mx', 'jcl_tie_upright_My', 'jcl_tie_upright_Mz', 'jcl_uca_rev_Fx', 'jcl_uca_rev_Fy', 'jcl_uca_rev_Fz', 'jcl_uca_rev_Mx', 'jcl_uca_rev_My', 'jcl_uca_rev_Mz', 'jcl_uca_upright_Fx', 'jcl_uca_upright_Fy', 'jcl_uca_upright_Fz', 'jcl_uca_upright_Mx', 'jcl_uca_upright_My', 'jcl_uca_upright_Mz', 'jcr_lca_rev_Fx', 'jcr_lca_rev_Fy', 'jcr_lca_rev_Fz', 'jcr_lca_rev_Mx', 'jcr_lca_rev_My', 'jcr_lca_rev_Mz', 'jcr_lca_upright_Fx', 'jcr_lca_upright_Fy', 'jcr_lca_upright_Fz', 'jcr_lca_upright_Mx', 'jcr_lca_upright_My', 'jcr_lca_upright_Mz', 'jcr_strut_ch_Fx', 'jcr_strut_ch_Fy', 'jcr_strut_ch_Fz', 'jcr_strut_ch_Mx', 'jcr_strut_ch_My', 'jcr_strut_ch_Mz', 'jcr_strut_cyl_Fx', 'jcr_strut_cyl_Fy', 'jcr_strut_cyl_Fz', 'jcr_strut_cyl_Mx', 'jcr_strut_cyl_My', 'jcr_strut_cyl_Mz', 'jcr_strut_lca_Fx', 'jcr_strut_lca_Fy', 'jcr_strut_lca_Fz', 'jcr_strut_lca_Mx', 'jcr_strut_lca_My', 'jcr_strut_lca_Mz', 'jcr_tie_steering_Fx', 'jcr_tie_steering_Fy', 'jcr_tie_steering_Fz', 'jcr_tie_steering_Mx', 'jcr_tie_steering_My', 'jcr_tie_steering_Mz', 'jcr_tie_upright_Fx', 'jcr_tie_upright_Fy', 'jcr_tie_upright_Fz', 'jcr_tie_upright_Mx', 'jcr_tie_upright_My', 'jcr_tie_upright_Mz', 'jcr_uca_rev_Fx', 'jcr_uca_rev_Fy', 'jcr_uca_rev_Fz', 'jcr_uca_rev_Mx', 'jcr_uca_rev_My', 'jcr_uca_rev_Mz', 'jcr_uca_upright_Fx', 'jcr_uca_upright_Fy', 'jcr_uca_upright_Fz', 'jcr_uca_upright_Mx', 'jcr_uca_upright_My', 'jcr_uca_upright_Mz'])
def JR(joints,q,lamda): 
	 JR_s[['jcl_lca_rev_Fx', 'jcl_lca_rev_Fy', 'jcl_lca_rev_Fz', 'jcl_lca_rev_Mx', 'jcl_lca_rev_My', 'jcl_lca_rev_Mz']]=joints['jcl_lca_rev'].reactions(q,lamda)
	 JR_s[['jcl_lca_upright_Fx', 'jcl_lca_upright_Fy', 'jcl_lca_upright_Fz', 'jcl_lca_upright_Mx', 'jcl_lca_upright_My', 'jcl_lca_upright_Mz']]=joints['jcl_lca_upright'].reactions(q,lamda)
	 JR_s[['jcl_strut_ch_Fx', 'jcl_strut_ch_Fy', 'jcl_strut_ch_Fz', 'jcl_strut_ch_Mx', 'jcl_strut_ch_My', 'jcl_strut_ch_Mz']]=joints['jcl_strut_ch'].reactions(q,lamda)
	 JR_s[['jcl_strut_cyl_Fx', 'jcl_strut_cyl_Fy', 'jcl_strut_cyl_Fz', 'jcl_strut_cyl_Mx', 'jcl_strut_cyl_My', 'jcl_strut_cyl_Mz']]=joints['jcl_strut_cyl'].reactions(q,lamda)
	 JR_s[['jcl_strut_lca_Fx', 'jcl_strut_lca_Fy', 'jcl_strut_lca_Fz', 'jcl_strut_lca_Mx', 'jcl_strut_lca_My', 'jcl_strut_lca_Mz']]=joints['jcl_strut_lca'].reactions(q,lamda)
	 JR_s[['jcl_tie_steering_Fx', 'jcl_tie_steering_Fy', 'jcl_tie_steering_Fz', 'jcl_tie_steering_Mx', 'jcl_tie_steering_My', 'jcl_tie_steering_Mz']]=joints['jcl_tie_steering'].reactions(q,lamda)
	 JR_s[['jcl_tie_upright_Fx', 'jcl_tie_upright_Fy', 'jcl_tie_upright_Fz', 'jcl_tie_upright_Mx', 'jcl_tie_upright_My', 'jcl_tie_upright_Mz']]=joints['jcl_tie_upright'].reactions(q,lamda)
	 JR_s[['jcl_uca_rev_Fx', 'jcl_uca_rev_Fy', 'jcl_uca_rev_Fz', 'jcl_uca_rev_Mx', 'jcl_uca_rev_My', 'jcl_uca_rev_Mz']]=joints['jcl_uca_rev'].reactions(q,lamda)
	 JR_s[['jcl_uca_upright_Fx', 'jcl_uca_upright_Fy', 'jcl_uca_upright_Fz', 'jcl_uca_upright_Mx', 'jcl_uca_upright_My', 'jcl_uca_upright_Mz']]=joints['jcl_uca_upright'].reactions(q,lamda)
	 JR_s[['jcr_lca_rev_Fx', 'jcr_lca_rev_Fy', 'jcr_lca_rev_Fz', 'jcr_lca_rev_Mx', 'jcr_lca_rev_My', 'jcr_lca_rev_Mz']]=joints['jcr_lca_rev'].reactions(q,lamda)
	 JR_s[['jcr_lca_upright_Fx', 'jcr_lca_upright_Fy', 'jcr_lca_upright_Fz', 'jcr_lca_upright_Mx', 'jcr_lca_upright_My', 'jcr_lca_upright_Mz']]=joints['jcr_lca_upright'].reactions(q,lamda)
	 JR_s[['jcr_strut_ch_Fx', 'jcr_strut_ch_Fy', 'jcr_strut_ch_Fz', 'jcr_strut_ch_Mx', 'jcr_strut_ch_My', 'jcr_strut_ch_Mz']]=joints['jcr_strut_ch'].reactions(q,lamda)
	 JR_s[['jcr_strut_cyl_Fx', 'jcr_strut_cyl_Fy', 'jcr_strut_cyl_Fz', 'jcr_strut_cyl_Mx', 'jcr_strut_cyl_My', 'jcr_strut_cyl_Mz']]=joints['jcr_strut_cyl'].reactions(q,lamda)
	 JR_s[['jcr_strut_lca_Fx', 'jcr_strut_lca_Fy', 'jcr_strut_lca_Fz', 'jcr_strut_lca_Mx', 'jcr_strut_lca_My', 'jcr_strut_lca_Mz']]=joints['jcr_strut_lca'].reactions(q,lamda)
	 JR_s[['jcr_tie_steering_Fx', 'jcr_tie_steering_Fy', 'jcr_tie_steering_Fz', 'jcr_tie_steering_Mx', 'jcr_tie_steering_My', 'jcr_tie_steering_Mz']]=joints['jcr_tie_steering'].reactions(q,lamda)
	 JR_s[['jcr_tie_upright_Fx', 'jcr_tie_upright_Fy', 'jcr_tie_upright_Fz', 'jcr_tie_upright_Mx', 'jcr_tie_upright_My', 'jcr_tie_upright_Mz']]=joints['jcr_tie_upright'].reactions(q,lamda)
	 JR_s[['jcr_uca_rev_Fx', 'jcr_uca_rev_Fy', 'jcr_uca_rev_Fz', 'jcr_uca_rev_Mx', 'jcr_uca_rev_My', 'jcr_uca_rev_Mz']]=joints['jcr_uca_rev'].reactions(q,lamda)
	 JR_s[['jcr_uca_upright_Fx', 'jcr_uca_upright_Fy', 'jcr_uca_upright_Fz', 'jcr_uca_upright_Mx', 'jcr_uca_upright_My', 'jcr_uca_upright_Mz']]=joints['jcr_uca_upright'].reactions(q,lamda)
	 return JR_s 


